import type { CryptoNetwork } from '../types'

const cryptoNetworks = [
  {
    code: 'ETH',
    name: 'Ethereum',
    nativeCurrency: 'ETH',
    chainId: 1,
    rpcUrl: 'https://mainnet.infura.io/v3/',
    explorerUrl: 'https://etherscan.io',
  },
  {
    code: 'BTC',
    name: 'Bitcoin',
    nativeCurrency: 'BTC',
    explorerUrl: 'https://blockstream.info',
  },
  {
    code: 'BSC',
    name: 'Binance Smart Chain',
    nativeCurrency: 'BNB',
    chainId: 56,
    rpcUrl: 'https://bsc-dataseed1.binance.org',
    explorerUrl: 'https://bscscan.com',
  },
  {
    code: 'POLYGON',
    name: 'Polygon',
    nativeCurrency: 'MATIC',
    chainId: 137,
    rpcUrl: 'https://polygon-rpc.com',
    explorerUrl: 'https://polygonscan.com',
  },
  {
    code: 'AVALANCHE',
    name: 'Avalanche C-Chain',
    nativeCurrency: 'AVAX',
    chainId: 43114,
    rpcUrl: 'https://api.avax.network/ext/bc/C/rpc',
    explorerUrl: 'https://snowtrace.io',
  },
  {
    code: 'SOLANA',
    name: 'Solana',
    nativeCurrency: 'SOL',
    rpcUrl: 'https://api.mainnet-beta.solana.com',
    explorerUrl: 'https://explorer.solana.com',
  },
  {
    code: 'CARDANO',
    name: 'Cardano',
    nativeCurrency: 'ADA',
    explorerUrl: 'https://cardanoscan.io',
  },
  {
    code: 'POLKADOT',
    name: 'Polkadot',
    nativeCurrency: 'DOT',
    explorerUrl: 'https://polkadot.subscan.io',
  },
  {
    code: 'COSMOS',
    name: 'Cosmos Hub',
    nativeCurrency: 'ATOM',
    explorerUrl: 'https://www.mintscan.io/cosmos',
  },
  {
    code: 'ARBITRUM',
    name: 'Arbitrum One',
    nativeCurrency: 'ETH',
    chainId: 42161,
    rpcUrl: 'https://arb1.arbitrum.io/rpc',
    explorerUrl: 'https://arbiscan.io',
  },
  {
    code: 'OPTIMISM',
    name: 'Optimism',
    nativeCurrency: 'ETH',
    chainId: 10,
    rpcUrl: 'https://mainnet.optimism.io',
    explorerUrl: 'https://optimistic.etherscan.io',
  },
  {
    code: 'FANTOM',
    name: 'Fantom Opera',
    nativeCurrency: 'FTM',
    chainId: 250,
    rpcUrl: 'https://rpc.ftm.tools',
    explorerUrl: 'https://ftmscan.com',
  },
  {
    code: 'TRON',
    name: 'Tron',
    nativeCurrency: 'TRX',
    explorerUrl: 'https://tronscan.org',
  },
  {
    code: 'NEAR',
    name: 'NEAR Protocol',
    nativeCurrency: 'NEAR',
    explorerUrl: 'https://explorer.near.org',
  },
  {
    code: 'ALGORAND',
    name: 'Algorand',
    nativeCurrency: 'ALGO',
    explorerUrl: 'https://algoexplorer.io',
  },
  {
    code: 'TEZOS',
    name: 'Tezos',
    nativeCurrency: 'XTZ',
    explorerUrl: 'https://tzstats.com',
  },
  {
    code: 'CRONOS',
    name: 'Cronos',
    nativeCurrency: 'CRO',
    chainId: 25,
    rpcUrl: 'https://evm.cronos.org',
    explorerUrl: 'https://cronoscan.com',
  },
  {
    code: 'MOONBEAM',
    name: 'Moonbeam',
    nativeCurrency: 'GLMR',
    chainId: 1284,
    rpcUrl: 'https://rpc.api.moonbeam.network',
    explorerUrl: 'https://moonscan.io',
  },
  {
    code: 'AURORA',
    name: 'Aurora',
    nativeCurrency: 'ETH',
    chainId: 1313161554,
    rpcUrl: 'https://mainnet.aurora.dev',
    explorerUrl: 'https://aurorascan.dev',
  },
  {
    code: 'HARMONY',
    name: 'Harmony',
    nativeCurrency: 'ONE',
    chainId: 1666600000,
    rpcUrl: 'https://api.harmony.one',
    explorerUrl: 'https://explorer.harmony.one',
  },
  {
    code: 'CELO',
    name: 'Celo',
    nativeCurrency: 'CELO',
    chainId: 42220,
    rpcUrl: 'https://forno.celo.org',
    explorerUrl: 'https://explorer.celo.org',
  },
  {
    code: 'KAVA',
    name: 'Kava EVM',
    nativeCurrency: 'KAVA',
    chainId: 2222,
    rpcUrl: 'https://evm.kava.io',
    explorerUrl: 'https://explorer.kava.io',
  },
  {
    code: 'XRP',
    name: 'XRP Ledger',
    nativeCurrency: 'XRP',
    explorerUrl: 'https://xrpscan.com',
  },
  {
    code: 'LTC',
    name: 'Litecoin',
    nativeCurrency: 'LTC',
    explorerUrl: 'https://blockchair.com/litecoin',
  },
  {
    code: 'DOGE',
    name: 'Dogecoin',
    nativeCurrency: 'DOGE',
    explorerUrl: 'https://dogechain.info',
  },
] as const satisfies readonly CryptoNetwork[]

export default cryptoNetworks

export type CryptoNetworkCode = (typeof cryptoNetworks)[number]['code']
